#!/usr/bin/env ruby

## Download customer album
## Get ICE to provide a list / JSON array of URLs in the customer album, or generate yourself using instructions at bottom of linked page:
## https://sites.google.com/a/livelinktechnology.net/intranet/wiki/shared-documentation/knowledge-base/baggage/baggage-troubleshooting/missing-images-in-photo-albums

app_root = File.expand_path(dirname(File.dirname(__FILE__)))

require 'optparse'
require File.join(app_root, 'lib', 'download_album.rb')

options = {
  :temp_dir = File.join(app_root, 'tmp', 'download_album'),
  :output_dir = File.join(app_root, 'output', 'download_album')
}

optparse = OptionParser.new do |opts|
  opts.banner = "Usage: bin/download_album /path/to/image_urls.json"

  opts.on( '-f', '--file FILEPATH', 'Specify filepath of JSON array') { |path| options[:urls] = JSON.parse(File.read(path)) }
  opts.on( '-n', '--name ZIP_NAME', 'Specify your album zip file name') { |fn| options[:name] = [fn.gsub('.zip', ''), 'zip'].join('.') }
  opts.on( '-?', '--help', 'Prints this help prompt') { puts opts ; exit }
#  opts.on( '-b', '--pry', 'Invoke pry to run in Ruby CLI - Run > check_img_urls(urls_array)') { options[:pry] = true }
end.parse!

begin
  if options[:pry]
    require 'pry'
    binding.pry
    raise EndPry
  else
    options[:name] = [Time.now.to_s.split(' ')[0..1].join('_').gsub(':', ''), 'zip'].join('.') unless options[:name]
    abort('[WMTOOLS][ERR] Specify a filepath to JSON array of URLS with -f') unless options[:urls]
    puts("[WMTOOLS][LOG] Outputting to #{File.join(options[:output_dir], options[:name])}")

    puts 'TBW'
  end
rescue EndPry
  puts('[WMTOOLS][LOG] See you again soon!')
end

